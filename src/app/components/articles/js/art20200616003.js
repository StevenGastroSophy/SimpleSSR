const art20200616003 = "# 替 React SPA加上 React router\n\n因為我們上次做的 React SPA只有一頁，今天我們要替他加上另外一頁、然後用 `React router`做 **client side**的路由跳轉\n\n這次主要修改 2個檔案:\n* **App.js**: 改成 router規則的集中處\n* **client.js**: 把 App用 `Router`包起來，然後把 `browser history`傳給 `Router`\n\n---\n\n另外新增 2個頁面， `Page1.js`和 `Page2.js`\n\n**containers/Page1.js**:\n```\nimport React, { Component } from 'react';\n\nclass Page1 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleTurnPage = () => {\n    const {\n      history\n    } = this.props;\n\n    const code = \"qwer\";\n\n    history.push({ pathname: `/page2/${code}` });\n  }\n\n  render() {\n    const {\n      app,\n      match,\n    } = this.props;\n    const {\n      params,\n    } = match;\n    const {\n      code = '',\n    } = params;\n    const {\n      imageUrl,\n    } = app;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={`${imageUrl}logo.svg`} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Page1, code: <code>{code}</code>\n          </p>\n          <a\n            className=\"App-link\"\n            rel=\"noopener noreferrer\"\n            onClick={this.handleTurnPage}\n          >\n            To Page2\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Page1;\n```\n**containers/Page2.js**:\n```\nimport React, { Component } from 'react';\n\nclass Page2 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleTurnPage = () => {\n    const {\n      history\n    } = this.props;\n\n    const code = \"asdf\";\n\n    history.push({ pathname: `/${code}` });\n  }\n\n  render() {\n    const {\n      app,\n      match = {},\n    } = this.props;\n    const {\n      params,\n    } = match;\n    const {\n      code = '',\n    } = params;\n    const {\n      imageUrl,\n    } = app;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={`${imageUrl}logo.svg`} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Page2, code: <code>{code}</code>\n          </p>\n          <a\n            className=\"App-link\"\n            rel=\"noopener noreferrer\"\n            onClick={this.handleTurnPage}\n          >\n            To Page1\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Page2;\n```\n\n---\n\n**containers/App.js**:\n```\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Page1 from './Page1';\nimport Page2 from './Page2';\n\nconst App = ({ app, hostname }) => {\n  const bindAppProps = Component => props => <Component {...props} app={app} />;\n\n  const renderPage1 = bindAppProps(Page1);\n  const renderPage2 = bindAppProps(Page2);\n\n  return (\n    <Switch>\n      <Route\n        exact\n        path={`/:code`}\n        component={renderPage1}\n      />\n      <Route\n        path={`/page2/:code`}\n        component={renderPage2}\n      />\n      <Route\n        component={renderPage1}\n      />\n    </Switch>\n  );\n}\n\nexport default App;\n```\n在 `client.js`，主要調整這2段:\n```\nconst history = createBrowserHistory();\n\nconst component = (\n  <Router history={history}>\n    <App\n      app={app}\n    />\n  </Router>\n);\n```\n**client.js**:\n```\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\nimport App from './app/containers/App';\n\nconst history = createBrowserHistory();\n\nconst app = {\n  mainUrl: 'http://localhost:3000/',\n  staticUrl: 'http://localhost:3000/static/',\n  cssUrl: 'http://localhost:3000/static/css/',\n  imageUrl: 'http://localhost:3000/static/image/',\n};\n\nconst component = (\n  <Router history={history}>\n    <App\n      app={app}\n    />\n  </Router>\n);\n\nrender(\n  component,\n  document.getElementById('content'),\n);\n```\n![](/static/image/20200615105926.png \"20200615105926\")\n\n最後:\n```\n$ npm run watch\n$ npm run dev\n```\n打開 `http://localhost:3000/`\n\n試著點 **To Page2** 或 **To Page1**、檢查 chrome devtools的 network會發現瀏覽器沒有向 server發出頁面的 request，這代表我們的 client side router已經完成啦!";

export default art20200616003;